# Form implementation generated from reading ui file 'count.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt6.QtWidgets import QApplication, QWidget, QHBoxLayout, QVBoxLayout
from PyQt6.QtCore import Qt
from PyQt6 import uic, QtWidgets, QtCore
import os


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        # Grid layout
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(90, 20, 621, 491))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        # Title box
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(330, 350, 341, 81))
        self.label.setStyleSheet("background :rgb(0, 255, 255);")
        self.label.setObjectName("label")

        # text box for input
        self.textEdit = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(120, 160, 551, 123))
        self.textEdit.setObjectName("textEdit")
        
        # count push button
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(120, 350, 141, 81))
        self.pushButton.setStyleSheet("background:rgb(255, 0, 0);")
        self.pushButton.setObjectName("pushButton")
        
        # Output label
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(120, 92, 111, 21))
        self.label_2.setStyleSheet("background:rgb(255, 255, 0);")
        self.label_2.setObjectName("label_2")
        
        # Output the length here.
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(580, 360, 80, 51))
        self.label_3.setStyleSheet("background :rgb(255, 255, 255);")
        self.label_3.setObjectName("label_3")
        
        # setup 
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 36))
        self.menubar.setObjectName("menubar")
        self.menuChar_Tot_Alot = QtWidgets.QMenu(parent=self.menubar)
        self.menuChar_Tot_Alot.setObjectName("menuChar_Tot_Alot")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuChar_Tot_Alot.menuAction())

        self.retranslateUi(MainWindow)
        self.connectActions()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "COUNT"))
        self.label_2.setText(_translate("MainWindow", "TYPE HERE:"))
        self.label.setText(_translate("MainWindow", "NUMBER OF CHARCATERS :"))
        self.label_3.setText(_translate("MainWindow", "TextLabel"))
        self.menuChar_Tot_Alot.setTitle(_translate("MainWindow", "Char Tot Alot"))
    
    def connectActions(self):
     self.pushButton.clicked.connect(self.count)
    
    # function to count the number of characters
    def count(self):
        text = self.textEdit.toPlainText()
        length = len(text)
        self.label_3.setText(f"{length}")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    try:
        sys.exit(app.exec())
    except:
        print('Closing Window...')